{"version":3,"sources":["null","ng://@swimlane/ngx-dnd/lib/services/drake-store.service.ts","ng://@swimlane/ngx-dnd/lib/directives/ngx-droppable.directive.ts","ng://@swimlane/ngx-dnd/lib/directives/ngx-draggable.directive.ts","ng://@swimlane/ngx-dnd/lib/directives/ngx-drag-handle.directive.ts","ng://@swimlane/ngx-dnd/lib/components/container/container.component.ts","ng://@swimlane/ngx-dnd/lib/components/item/item.component.ts","ng://@swimlane/ngx-dnd/lib/ngx-dnd.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","dragula","dragulaNamespace","DrakeStoreService","WeakMap","this","dragulaOptions","createDrakeOptions","drake","registerEvents","prototype","register","droppable","droppableMap","set","container","containers","remove","delete","idx","indexOf","splice","registerDraggable","draggable","draggableMap","element","removeDraggable","_this","accepts","el","target","contains","elementComponent","get","targetComponent","dropZones","includes","dropZone","copy","_","source","sourceComponent","moves","handle","sibling","revertOnSpill","direction","dragElm","draggedItem","on","undefined","has","model","drag","emit","type","removeOnSpill","dropElmModel","dropIndex","Array","children","cancel","sourceModel","targetModel","hasDragModel","dragIndex","parentNode","removeChild","JSON","parse","stringify","drop","appendChild","over","out","Injectable","DroppableDirective","renderer","drakesService","EventEmitter","Object","defineProperty","nativeElement","_dropZone","ngxDroppable","defaultZone","val","ngOnInit","ngAfterViewInit","subscribe","addClass","removeClass","ngOnDestroy","Directive","args","selector","ElementRef","Renderer2","Input","Output","DraggableDirective","droppableDirective","_dropZones","ngxDraggable","_parentDropzones","handles","onMove","_moves","dragDelayed","stopPropagation","clearTimeout","touchTimeout","onDown","setTimeout","dragDelay","onUp","update","updateElements","querySelectorAll","from","filter","h","c","hasAttribute","findFirstDraggableParent","canMove","hasHandle","some","p","handelFor","ngDoCheck","HostListener","ContainerComponent","_defaultZones","v","Component","template","styles","encapsulation","ViewEncapsulation","None","ContentChild","TemplateRef","ViewChild","ItemComponent","draggableDirective","_droppableItemClass","droppableItemClass","_removeOnSpill","_copy","classes","moveDisabled","join","isArray","data","HostBinding","components","directives","DragHandleDirective","NgModule","imports","CommonModule","declarations","exports","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport * as dragulaNamespace from '@swimlane/dragula';\nimport { DroppableDirective } from '../directives/ngx-droppable.directive';\nimport { DraggableDirective } from '../directives/ngx-draggable.directive';\n\n// see https://github.com/dherges/ng-packagr/issues/217\nconst dragula = dragulaNamespace;\n\n/**\n * Central service that handles all events\n *\n * @export\n */\n@Injectable()\nexport class DrakeStoreService {\n  private droppableMap = new WeakMap<any, DroppableDirective>();\n  private draggableMap = new WeakMap<any, DraggableDirective>();\n  private dragulaOptions: dragulaNamespace.DragulaOptions;\n  private drake: dragulaNamespace.Drake;\n\n  constructor() {\n    this.dragulaOptions = this.createDrakeOptions();\n    this.drake = dragula([], this.dragulaOptions);\n    this.registerEvents();\n  }\n\n  register(droppable: DroppableDirective) {\n    this.droppableMap.set(droppable.container, droppable);\n    this.drake.containers.push(droppable.container);\n  }\n\n  remove(droppable: DroppableDirective) {\n    this.droppableMap.delete(droppable.container);\n    const idx = this.drake.containers.indexOf(droppable.container);\n    if (idx > -1) {\n      this.drake.containers.splice(idx, 1);\n    }\n  }\n\n  registerDraggable(draggable: DraggableDirective) {\n    this.draggableMap.set(draggable.element, draggable);\n  }\n\n  removeDraggable(draggable: DraggableDirective) {\n    this.draggableMap.delete(draggable.element);\n  }\n\n  createDrakeOptions(): dragulaNamespace.DragulaOptions {\n    const accepts = (el: any, target: any /*, source: any, sibling: any */) => {\n      if (el.contains(target)) {\n        return false;\n      }\n      const elementComponent = this.draggableMap.get(el);\n      const targetComponent = this.droppableMap.get(target);\n      if (elementComponent && targetComponent) {\n        return elementComponent.dropZones.includes(targetComponent.dropZone);\n      }\n      return true;\n    };\n\n    const copy = (_: any, source: any) => {\n      const sourceComponent = this.droppableMap.get(source);\n      if (sourceComponent) {\n        return sourceComponent.copy;\n      }\n      return false;\n    };\n\n    const moves = (el?: any, source?: any, handle?: any, sibling?: any) => {\n      const elementComponent = this.draggableMap.get(el);\n      if (elementComponent) {\n        return elementComponent.moves(source, handle, sibling);\n      }\n      return true;\n    };\n\n    return { accepts, copy, moves, revertOnSpill: true, direction: 'vertical' };\n  }\n\n  registerEvents(): void {\n    let dragElm: any;\n    let draggedItem: any;\n\n    this.drake.on('drag', (el: any, source: any) => {\n      draggedItem = undefined;\n      dragElm = el;\n\n      if (!el || !source) {\n        return;\n      }\n\n      if (this.draggableMap.has(el)) {\n        const elementComponent = this.draggableMap.get(el);\n        draggedItem = elementComponent.model;\n\n        elementComponent.drag.emit({\n          type: 'drag',\n          el,\n          source,\n          value: draggedItem\n        });\n      }\n\n      if (this.droppableMap.has(source)) {\n        const sourceComponent = this.droppableMap.get(source);\n        this.dragulaOptions.removeOnSpill = sourceComponent.removeOnSpill;\n\n        sourceComponent.drag.emit({\n          type: 'drag',\n          el,\n          source,\n          sourceComponent,\n          value: draggedItem\n        });\n      }\n    });\n\n    this.drake.on('drop', (el: any, target: any, source: any) => {\n      const targetComponent = this.droppableMap.get(target);\n\n      if (!targetComponent) {\n        // not a target, abort\n        return;\n      }\n\n      let dropElmModel = draggedItem;\n      const dropIndex = Array.prototype.indexOf.call(target.children, el);\n\n      if (dropIndex < 0) {\n        // dropIndex is bad... cancel\n        this.drake.cancel(true);\n        return;\n      }\n\n      const sourceComponent = this.droppableMap.get(source);\n\n      if (sourceComponent) {\n        const sourceModel = sourceComponent.model;\n        const targetModel = targetComponent.model;\n\n        const hasDragModel = !!(sourceModel && draggedItem);\n        const dragIndex = hasDragModel ? sourceModel.indexOf(draggedItem) : -1;\n        if (hasDragModel && dragIndex < 0) {\n          // dragIndex is bad... cancel\n          this.drake.cancel(true);\n          return;\n        }\n\n        if (targetModel) {\n          const reorder = dragIndex > -1 && sourceModel && target === source;\n          const copy = !sourceModel || dragElm !== el;\n          if (reorder) {\n            sourceModel.splice(dropIndex, 0, sourceModel.splice(dragIndex, 1)[0]);\n          } else {\n            if (el.parentNode === target) {\n              target.removeChild(el);\n            }\n\n            if (copy) {\n              dropElmModel = JSON.parse(JSON.stringify(dropElmModel));\n            } else {\n              if (el.parentNode !== source) {\n                // add element back, let angular remove it\n                this.drake.cancel(true);\n              }\n              sourceModel.splice(dragIndex, 1);\n            }\n            targetModel.splice(dropIndex, 0, dropElmModel);\n          }\n        }\n      }\n\n      targetComponent.drop.emit({\n        type: 'drop',\n        el,\n        source,\n        value: dropElmModel,\n        dropIndex\n      });\n    });\n\n    this.drake.on('remove', (el: any, container: any, source: any) => {\n      if (this.droppableMap.has(source)) {\n        const sourceComponent = this.droppableMap.get(source);\n        const sourceModel = sourceComponent.model;\n\n        const dragIndex = draggedItem && sourceModel ? sourceModel.indexOf(draggedItem) : -1;\n\n        if (dragIndex > -1) {\n          if (el.parentNode !== source) {\n            // add element back, let angular remove it\n            source.appendChild(el);\n          }\n          sourceModel.splice(dragIndex, 1);\n        }\n\n        sourceComponent.remove.emit({\n          type: 'remove',\n          el,\n          container,\n          source,\n          value: draggedItem\n        });\n      }\n    });\n\n    this.drake.on('cancel', (el: any, container: any, source: any) => {\n      if (this.droppableMap.has(container)) {\n        const containerComponent = this.droppableMap.get(container);\n        containerComponent.cancel.emit({\n          type: 'cancel',\n          el,\n          container,\n          source,\n          value: draggedItem\n        });\n      }\n    });\n\n    this.drake.on('over', (el: any, container: any, source: any) => {\n      if (this.droppableMap.has(container)) {\n        const containerComponent = this.droppableMap.get(container);\n        containerComponent.over.emit({\n          type: 'over',\n          el,\n          container,\n          source,\n          value: draggedItem\n        });\n      }\n    });\n\n    this.drake.on('out', (el: any, container: any, source: any) => {\n      if (this.droppableMap.has(container)) {\n        const containerComponent = this.droppableMap.get(container);\n        containerComponent.out.emit({\n          type: 'out',\n          el,\n          container,\n          source,\n          value: draggedItem\n        });\n      }\n    });\n  }\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  OnInit,\n  OnDestroy,\n  AfterViewInit,\n  ElementRef,\n  EventEmitter,\n  Renderer2\n} from '@angular/core';\n\nimport { DrakeStoreService } from '../services/drake-store.service';\n\nlet i = 10000;\nfunction getNextId() {\n  return i++;\n}\n\n/**\n * Makes the container droppable and children draggable.\n *\n * @export\n */\n@Directive({ selector: '[ngxDroppable]' })\nexport class DroppableDirective implements OnInit, OnDestroy, AfterViewInit {\n  @Input() model: any;\n  @Input() copy = false;\n  @Input() removeOnSpill = false;\n  @Input() ngxDroppable: string;\n\n  @Output() drop: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() drag: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() over: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() out: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() remove: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() cancel: EventEmitter<any> = new EventEmitter<any>();\n\n  get container(): any {\n    return this.el.nativeElement;\n  }\n\n  @Input()\n  get dropZone(): string {\n    return this._dropZone || this.ngxDroppable || this.defaultZone;\n  }\n  set dropZone(val: string) {\n    this._dropZone = val;\n  }\n\n  defaultZone: string;\n  _dropZone: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2, private drakesService: DrakeStoreService) {}\n\n  ngOnInit(): void {\n    this.defaultZone = `@@DefaultDropZone-${getNextId()}@@`;\n    this.drakesService.register(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.over.subscribe(() => {\n      this.renderer.addClass(this.container, 'gu-over');\n    });\n    this.out.subscribe(() => {\n      this.renderer.removeClass(this.container, 'gu-over');\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.drakesService.remove(this);\n  }\n}\n","import { Directive, ElementRef, HostListener, Input, Output, EventEmitter, OnDestroy, OnInit } from '@angular/core';\n\nimport { DroppableDirective } from './ngx-droppable.directive';\nimport { DrakeStoreService } from '../services/drake-store.service';\n\n/**\n * Adds properties and events to draggable elements\n *\n * @export\n */\n@Directive({ selector: '[ngxDraggable]' })\nexport class DraggableDirective implements OnInit, OnDestroy {\n  @Input() ngxDraggable: string[];\n  @Input() model: any;\n\n  @Input()\n  get dropZones(): any {\n    return this._dropZones || this.ngxDraggable || this._parentDropzones;\n  }\n  set dropZones(val: any) {\n    this._dropZones = val;\n  }\n\n  @Input('moves') _moves: boolean | ((...args: any[]) => any) = true;\n\n  /*\n  ContentChildren doesn't get children created with NgTemplateOutlet\n  See https://github.com/angular/angular/issues/14842\n  Implemented via updateElements method\n\n  @ContentChildren(DragHandleDirective, {descendants: true})\n  handlesList: QueryList<DragHandleDirective>; */\n\n  handles: any[] = [];\n\n  get hasHandle() {\n    return !!this.handles.length;\n  }\n\n  @Output() drag: EventEmitter<any> = new EventEmitter<any>();\n\n  dragDelay: number = 200; // milliseconds\n  dragDelayed: boolean = true;\n\n  touchTimeout: any;\n\n  get element(): any {\n    return this.el.nativeElement;\n  }\n\n  _dropZones: string[];\n  _parentDropzones: string[];\n\n  constructor(\n    private el: ElementRef,\n    private drakesService: DrakeStoreService,\n    private droppableDirective: DroppableDirective\n  ) {}\n\n  // From: https://github.com/bevacqua/dragula/issues/289#issuecomment-277143172\n  @HostListener('touchmove', ['$event'])\n  onMove(e: Event) {\n    if (!this._moves || this.dragDelayed) {\n      e.stopPropagation();\n      clearTimeout(this.touchTimeout);\n    }\n  }\n\n  @HostListener('touchstart')\n  onDown() {\n    if (this._moves) {\n      this.touchTimeout = setTimeout(() => {\n        this.dragDelayed = false;\n      }, this.dragDelay);\n    }\n  }\n\n  @HostListener('touchend')\n  onUp() {\n    if (this._moves) {\n      clearTimeout(<number>this.touchTimeout);\n      this.dragDelayed = true;\n    }\n  }\n\n  ngOnInit(): void {\n    this.update();\n  }\n\n  update(): void {\n    this._parentDropzones = [this.droppableDirective.dropZone];\n    this.drakesService.registerDraggable(this);\n    this.updateElements();\n  }\n\n  ngOnDestroy(): void {\n    this.drakesService.removeDraggable(this);\n  }\n\n  updateElements(): void {\n    const nativeElement = this.el.nativeElement;\n    const handles: NodeList = nativeElement.querySelectorAll('[ngxdraghandle]');\n    this.handles = Array.from(handles).filter((h: any) => findFirstDraggableParent(h) === nativeElement);\n\n    function findFirstDraggableParent(c: any) {\n      while (c.parentNode) {\n        c = c.parentNode;\n        if (c.hasAttribute && c.hasAttribute('ngxdraggable')) {\n          return c;\n        }\n      }\n    }\n  }\n\n  canMove(source?: any, handle?: any, sibling?: any): boolean {\n    if (typeof this._moves === 'boolean') return this._moves;\n    if (typeof this._moves === 'function') return this._moves(this.model, source, handle, sibling);\n    return true;\n  }\n\n  moves(source: any, handle: any, sibling: any): boolean {\n    if (!this.canMove(source, handle, sibling)) return false;\n\n    return this.hasHandle ? this.handles.some(h => handelFor(handle, h)) : true;\n\n    function handelFor(c: any, p: any) {\n      if (c === p) return true;\n      while ((c = c.parentNode) && c !== p); // tslint:disable-line\n      return !!c;\n    }\n  }\n\n  ngDoCheck(): void {\n    this.updateElements();\n  }\n}\n","import { Directive } from '@angular/core';\n\n/**\n * Adds properties and events to drag handle elements\n *\n * @export\n */\n@Directive({ selector: '[ngxDragHandle]' })\nexport class DragHandleDirective {}\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  ViewEncapsulation,\n  ContentChild,\n  TemplateRef,\n  ViewChild,\n  EventEmitter\n} from '@angular/core';\n\nimport { DroppableDirective } from '../../directives/ngx-droppable.directive';\n\nlet i = 0;\nfunction getNextId() {\n  return i++;\n}\n\n/**\n * Component that allows nested ngxDroppable and ngxDraggables\n *\n * @export\n */\n@Component({\n  selector: 'ngx-dnd-container',\n  template: `<div\n  ngxDroppable\n  [dropZone]=\"dropZone\"\n  [model]=\"model\"\n  [copy]=\"copy\"\n  [ngClass]=\"{ 'gu-empty': !model?.length }\"\n  [removeOnSpill]=\"removeOnSpill\"\n  class='ngx-dnd-container'>\n  <ng-container *ngIf=\"model\">\n    <ng-container *ngFor=\"let item of model\">\n      <ngx-dnd-item\n        ngxDraggable\n        [model]=\"item\"\n        [dropZone]=\"dropZone\"\n        [dropZones]=\"dropZones\"\n        [copy]=\"copy\"\n        [moves]=\"moves\"\n        [removeOnSpill]=\"removeOnSpill\"\n        [droppableItemClass]=\"droppableItemClass\">\n      </ngx-dnd-item>\n    </ng-container>\n  </ng-container>\n  <ng-content *ngIf=\"!model\"></ng-content>\n</div>\n`,\n  styles: [`.ngx-dnd-container{background-color:rgba(255,255,255,.2);border:2px solid red;margin:10px;padding:10px}.ngx-dnd-container.gu-empty{border:2px dotted red}.ngx-dnd-container:nth-child(odd){background-color:rgba(0,0,0,.2)}.ngx-dnd-container .ex-moved{background-color:#e74c3c}.ngx-dnd-container .ex-over{background-color:rgba(255,255,255,.3)}.ngx-dnd-container .handle{padding:0 5px;margin-right:5px;background-color:rgba(0,0,0,.4);cursor:move}.no-select{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}`],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ContainerComponent implements OnInit, AfterViewInit {\n  @Input() model: any;\n  @Input() copy = false;\n  @Input() removeOnSpill = false;\n  @Input() droppableItemClass: string | ((o: any) => any);\n\n  @Input() dropZone = `@@DefaultDropZone-${getNextId()}@@`;\n\n  @Input()\n  get dropZones() {\n    return this._dropZones || this._defaultZones;\n  }\n  set dropZones(val) {\n    this._dropZones = val;\n  }\n\n  @Input() moves: (model: any, source: any, handle: any, sibling: any) => boolean;\n\n  // @Input() classes: any = {};\n  // @Input() dragulaOptions: any;\n\n  @Input()\n  @ContentChild(TemplateRef)\n  template: TemplateRef<any>;\n\n  @Input()\n  @ViewChild(DroppableDirective)\n  droppable: any;\n\n  @Output() drop: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() drag: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() over: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() out: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() remove: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() cancel: EventEmitter<any> = new EventEmitter<any>();\n\n  _dropZones: string[];\n  _defaultZones: string[];\n\n  ngOnInit() {\n    this._defaultZones = [this.dropZone];\n  }\n\n  ngAfterViewInit() {\n    this.droppable.drag.subscribe((v: any) => this.drag.emit(v));\n    this.droppable.drop.subscribe((v: any) => this.drop.emit(v));\n    this.droppable.over.subscribe((v: any) => this.over.emit(v));\n    this.droppable.out.subscribe((v: any) => this.out.emit(v));\n    this.droppable.remove.subscribe((v: any) => this.remove.emit(v));\n    this.droppable.cancel.subscribe((v: any) => this.cancel.emit(v));\n  }\n}\n","import { Component, OnInit, Input, ViewEncapsulation, HostBinding } from '@angular/core';\n\nimport { ContainerComponent } from '../container/container.component';\nimport { DraggableDirective } from '../../directives/ngx-draggable.directive';\n\n/**\n * Component that allows nested ngxDroppable and ngxDraggables\n * Should only be use inside a ngx-dnd-container\n * Outside a ngx-dnd-container use ngxDroppable\n *\n * @export\n */\n@Component({\n  selector: 'ngx-dnd-item',\n  template: `<ng-container [ngSwitch]=\"type\">\n\n  <ng-container *ngSwitchCase=\"'array'\">\n    <ngx-dnd-container\n      [model]=\"model\"\n      [template]=\"container.template\"\n      [dropZone]=\"dropZone\"\n      [dropZones]=\"dropZones\"\n      [removeOnSpill]=\"removeOnSpill\"\n      [droppableItemClass]=\"droppableItemClass\"\n      [copy]=\"copy\">\n    </ngx-dnd-container>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"'object'\">\n    <ng-template\n      *ngIf=\"container.template\"\n      [ngTemplateOutlet]=\"container.template\"\n      [ngTemplateOutletContext]=\"data\">\n    </ng-template>\n    <ng-container *ngIf=\"!container.template\">\n      <div\n        class=\"ngx-dnd-content\">\n        {{model.label}}\n      </div>\n      <ngx-dnd-container\n        *ngIf=\"model.children\"\n        [model]=\"model.children\"\n        [template]=\"container.template\"\n        [dropZone]=\"dropZone\"\n        [dropZones]=\"dropZones\"\n        [removeOnSpill]=\"removeOnSpill\"\n        [droppableItemClass]=\"droppableItemClass\"\n        [copy]=\"copy\">\n      </ngx-dnd-container>\n    </ng-container>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"'undefined'\">\n  </ng-container>\n\n  <ng-container *ngSwitchDefault>\n    <ng-template\n      *ngIf=\"container.template\"\n      [ngTemplateOutlet]=\"container.template\"\n      [ngTemplateOutletContext]=\"data\">\n    </ng-template>\n    <div\n      *ngIf=\"!container.template\"\n      class=\"ngx-dnd-content\">\n      {{model}}\n    </div>\n  </ng-container>\n\n</ng-container>\n\n\n\n\n\n\n\n`,\n  styles: [`.ngx-dnd-item{margin:10px;padding:10px;background-color:rgba(0,0,0,.2);transition:opacity .4s ease-in-out;border:1px solid #add8e6;display:block}.ngx-dnd-item.has-handle [ngxDragHandle],.ngx-dnd-item.has-handle [ngxdraghandle],.ngx-dnd-item:not(.has-handle):not(.move-disabled){cursor:move;cursor:grab;cursor:-webkit-grab}.ngx-dnd-item .ngx-dnd-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ngx-dnd-item:hover{border:1px solid #00f}.gu-mirror{position:fixed!important;margin:0!important;z-index:9999!important;opacity:.8}.gu-hide{display:none!important}.gu-unselectable{-webkit-user-select:none!important;-moz-user-select:none!important;-ms-user-select:none!important;user-select:none!important}.gu-transit{opacity:.2}`],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ItemComponent implements OnInit {\n  @Input() model: any;\n\n  @Input()\n  get dropZone() {\n    return this._dropZone || this.container.dropZone;\n  }\n  set dropZone(val) {\n    this._dropZone = val;\n  }\n\n  @Input()\n  get dropZones() {\n    return this._dropZones || this.container.dropZones;\n  }\n  set dropZones(val) {\n    this._dropZones = val;\n  }\n\n  @Input()\n  get droppableItemClass() {\n    return this._droppableItemClass || this.container.droppableItemClass;\n  }\n  set droppableItemClass(val) {\n    this._droppableItemClass = val;\n  }\n\n  @Input()\n  get removeOnSpill() {\n    return typeof this._removeOnSpill === 'boolean' ? this._removeOnSpill : this.container.removeOnSpill;\n  }\n  set removeOnSpill(val) {\n    this._removeOnSpill = val;\n  }\n\n  @Input()\n  get copy() {\n    return typeof this._copy === 'boolean' ? this._copy : this.container.copy;\n  }\n  set copy(val) {\n    this._copy = val;\n  }\n\n  _copy = false;\n  _dropZone: any;\n  _dropZones: any;\n  _droppableItemClass: any;\n  _removeOnSpill = false;\n  data: any;\n\n  get hasHandle(): boolean {\n    return this.draggableDirective.hasHandle;\n  }\n\n  get moveDisabled(): boolean {\n    return !this.draggableDirective.canMove();\n  }\n\n  @HostBinding('class')\n  get classString() {\n    const itemClass =\n      typeof this.droppableItemClass === 'function' ? this.droppableItemClass(this.model) : this.droppableItemClass;\n\n    const classes = ['ngx-dnd-item', itemClass || ''];\n    if (this.moveDisabled) {\n      classes.push('move-disabled');\n    }\n    if (this.hasHandle) {\n      classes.push('has-handle');\n    }\n    return classes.join(' ');\n  }\n\n  get type() {\n    if (Array.isArray(this.model)) {\n      return 'array';\n    }\n    return typeof this.model;\n  }\n\n  constructor(public container: ContainerComponent, public draggableDirective: DraggableDirective) {}\n\n  ngOnInit() {\n    this.data = {\n      model: this.model,\n      type: this.type,\n      dropZone: this.dropZone,\n      template: this.container.template\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DraggableDirective } from './directives/ngx-draggable.directive';\nimport { DroppableDirective } from './directives/ngx-droppable.directive';\nimport { DragHandleDirective } from './directives/ngx-drag-handle.directive';\nimport { ContainerComponent } from './components/container/container.component';\nimport { ItemComponent } from './components/item/item.component';\nimport { DrakeStoreService } from './services/drake-store.service';\n\nconst components = [ContainerComponent, ItemComponent];\nconst directives = [DraggableDirective, DroppableDirective, DragHandleDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives],\n  providers: [DrakeStoreService]\n})\nexport class NgxDnDModule {}\n"]}